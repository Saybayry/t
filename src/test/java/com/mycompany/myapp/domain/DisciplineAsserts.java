package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DisciplineAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDisciplineAllPropertiesEquals(Discipline expected, Discipline actual) {
        assertDisciplineAutoGeneratedPropertiesEquals(expected, actual);
        assertDisciplineAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDisciplineAllUpdatablePropertiesEquals(Discipline expected, Discipline actual) {
        assertDisciplineUpdatableFieldsEquals(expected, actual);
        assertDisciplineUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDisciplineAutoGeneratedPropertiesEquals(Discipline expected, Discipline actual) {
        assertThat(expected)
            .as("Verify Discipline auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDisciplineUpdatableFieldsEquals(Discipline expected, Discipline actual) {
        assertThat(expected)
            .as("Verify Discipline relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDisciplineUpdatableRelationshipsEquals(Discipline expected, Discipline actual) {
        assertThat(expected)
            .as("Verify Discipline relationships")
            .satisfies(e -> assertThat(e.getTeachers()).as("check teachers").isEqualTo(actual.getTeachers()));
    }
}
