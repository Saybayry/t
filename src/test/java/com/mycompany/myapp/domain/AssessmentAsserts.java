package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AssessmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssessmentAllPropertiesEquals(Assessment expected, Assessment actual) {
        assertAssessmentAutoGeneratedPropertiesEquals(expected, actual);
        assertAssessmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssessmentAllUpdatablePropertiesEquals(Assessment expected, Assessment actual) {
        assertAssessmentUpdatableFieldsEquals(expected, actual);
        assertAssessmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssessmentAutoGeneratedPropertiesEquals(Assessment expected, Assessment actual) {
        assertThat(expected)
            .as("Verify Assessment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssessmentUpdatableFieldsEquals(Assessment expected, Assessment actual) {
        assertThat(expected)
            .as("Verify Assessment relevant properties")
            .satisfies(e -> assertThat(e.getIsPresent()).as("check isPresent").isEqualTo(actual.getIsPresent()))
            .satisfies(e -> assertThat(e.getAssessment()).as("check assessment").isEqualTo(actual.getAssessment()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAssessmentUpdatableRelationshipsEquals(Assessment expected, Assessment actual) {
        assertThat(expected)
            .as("Verify Assessment relationships")
            .satisfies(e -> assertThat(e.getStudent()).as("check student").isEqualTo(actual.getStudent()))
            .satisfies(e -> assertThat(e.getLesson()).as("check lesson").isEqualTo(actual.getLesson()));
    }
}
