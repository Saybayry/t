package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LessonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonAllPropertiesEquals(Lesson expected, Lesson actual) {
        assertLessonAutoGeneratedPropertiesEquals(expected, actual);
        assertLessonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonAllUpdatablePropertiesEquals(Lesson expected, Lesson actual) {
        assertLessonUpdatableFieldsEquals(expected, actual);
        assertLessonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonAutoGeneratedPropertiesEquals(Lesson expected, Lesson actual) {
        assertThat(expected)
            .as("Verify Lesson auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonUpdatableFieldsEquals(Lesson expected, Lesson actual) {
        assertThat(expected)
            .as("Verify Lesson relevant properties")
            .satisfies(e -> assertThat(e.getClassDate()).as("check classDate").isEqualTo(actual.getClassDate()))
            .satisfies(e -> assertThat(e.getClassNumber()).as("check classNumber").isEqualTo(actual.getClassNumber()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLessonUpdatableRelationshipsEquals(Lesson expected, Lesson actual) {
        assertThat(expected)
            .as("Verify Lesson relationships")
            .satisfies(e -> assertThat(e.getDiscipline()).as("check discipline").isEqualTo(actual.getDiscipline()))
            .satisfies(e -> assertThat(e.getTeacher()).as("check teacher").isEqualTo(actual.getTeacher()));
    }
}
